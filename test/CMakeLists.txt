

find_package(Threads REQUIRED)
set(Boost_USE_STATIC_LIBS OFF)
set(Boost_USE_MULTITHREADED ON)
set(Boost_USE_STATIC_RUNTIME OFF)
find_package(Boost COMPONENTS unit_test_framework REQUIRED)
set(Boost_FIND_QUIETLY ON CACHE BOOL "Find Boost Quietly" FORCE)
include_directories(${Boost_INCLUDE_DIRS})

add_executable(SAMPLEOBJ sample_test.pass.cpp)
target_link_libraries( SAMPLEOBJ elib ${CMAKE_THREAD_LIBS_INIT} ${Boost_LIBRARIES})

include (FindPythonInterp)
if (PYTHONINTERP_FOUND)


################################################################################
  
  set(ELIB_TEST_BINARY_DIR ${CMAKE_CURRENT_BINARY_DIR})
  

  set(LIT_EXECUTABLE "${ELIB_ROOT_PATH}/packages/lit/lit.py" CACHE FILEPATH "Path to LLVM's lit.py.")
  set(LIT_ARGS_DEFAULT "-sv" CACHE STRING "Default lit args")
  set(LIT_ARGS "${LIT_ARGS_DEFAULT}")
  separate_arguments(LIT_ARGS)

  set(SAMPLE_OBJECT "SAMPLEOBJ")

  set(AUTO_GEN_COMMENT "## Autogenerated by elib configuration.\n# Do not edit!")
  

  configure_file(
    ${CMAKE_CURRENT_SOURCE_DIR}/lit.site.cfg.in
    ${CMAKE_CURRENT_BINARY_DIR}/lit.site.cfg
    @ONLY)

  add_custom_target(check-elib
    COMMAND ${PYTHON_EXECUTABLE}
            ${LIT_EXECUTABLE}
            ${LIT_ARGS}
            ${CMAKE_CURRENT_BINARY_DIR}
    DEPENDS elib
    COMMENT "Running elib tests")
else()
  message(WARNING "Could not find Python, no check target will be available!")
endif()
