#ifndef ELIB_AUX_TRAITS_HPP
#define ELIB_AUX_TRAITS_HPP
# 
# include <elib/aux/traits/remove_const.hpp>
# include <elib/aux/traits/remove_volatile.hpp>
# include <elib/aux/traits/remove_cv.hpp>
# include <elib/aux/traits/add_const.hpp>
# include <elib/aux/traits/add_volatile.hpp>
# include <elib/aux/traits/add_cv.hpp>
# include <elib/aux/traits/remove_reference.hpp>
# include <elib/aux/traits/add_lvalue_reference.hpp>
# include <elib/aux/traits/add_rvalue_reference.hpp>
# include <elib/aux/traits/remove_pointer.hpp>
# include <elib/aux/traits/add_pointer.hpp>
# include <elib/aux/traits/make_signed.hpp>
# include <elib/aux/traits/make_unsigned.hpp>
# include <elib/aux/traits/remove_extent.hpp>
# include <elib/aux/traits/remove_all_extents.hpp>
# include <elib/aux/traits/aligned_storage.hpp>
# include <elib/aux/traits/aligned_union.hpp>
# include <elib/aux/traits/decay.hpp>
# include <elib/aux/traits/common_type.hpp>
# include <elib/aux/traits/underlying_type.hpp>
# include <elib/aux/traits/result_of.hpp>
# include <elib/aux/traits/is_void.hpp>
# include <elib/aux/traits/is_integral.hpp>
# include <elib/aux/traits/is_floating_point.hpp>
# include <elib/aux/traits/is_array.hpp>
# include <elib/aux/traits/is_enum.hpp>
# include <elib/aux/traits/is_integral_enum.hpp>
# include <elib/aux/traits/is_union.hpp>
# include <elib/aux/traits/is_class.hpp>
# include <elib/aux/traits/is_function.hpp>
# include <elib/aux/traits/is_pointer.hpp>
# include <elib/aux/traits/is_lvalue_reference.hpp>
# include <elib/aux/traits/is_rvalue_reference.hpp>
# include <elib/aux/traits/is_member_object_pointer.hpp>
# include <elib/aux/traits/is_member_function_pointer.hpp>
# include <elib/aux/traits/is_null_pointer.hpp>
# include <elib/aux/traits/is_fundamental.hpp>
# include <elib/aux/traits/is_arithmetic.hpp>
# include <elib/aux/traits/is_scalar.hpp>
# include <elib/aux/traits/is_object.hpp>
# include <elib/aux/traits/is_compound.hpp>
# include <elib/aux/traits/is_reference.hpp>
# include <elib/aux/traits/is_member_pointer.hpp>
# include <elib/aux/traits/is_const.hpp>
# include <elib/aux/traits/is_volatile.hpp>
# include <elib/aux/traits/is_trivial.hpp>
# include <elib/aux/traits/is_standard_layout.hpp>
# include <elib/aux/traits/is_pod.hpp>
# include <elib/aux/traits/is_literal_type.hpp>
# include <elib/aux/traits/is_empty.hpp>
# include <elib/aux/traits/is_polymorphic.hpp>
# include <elib/aux/traits/is_abstract.hpp>
# include <elib/aux/traits/is_signed.hpp>
# include <elib/aux/traits/is_unsigned.hpp>
# include <elib/aux/traits/is_constructible.hpp>
# include <elib/aux/traits/is_default_constructible.hpp>
# include <elib/aux/traits/is_copy_constructible.hpp>
# include <elib/aux/traits/is_move_constructible.hpp>
# include <elib/aux/traits/is_assignable.hpp>
# include <elib/aux/traits/is_copy_assignable.hpp>
# include <elib/aux/traits/is_move_assignable.hpp>
# include <elib/aux/traits/is_nothrow_constructible.hpp>
# include <elib/aux/traits/is_nothrow_default_constructible.hpp>
# include <elib/aux/traits/is_nothrow_copy_constructible.hpp>
# include <elib/aux/traits/is_nothrow_move_constructible.hpp>
# include <elib/aux/traits/is_nothrow_assignable.hpp>
# include <elib/aux/traits/is_nothrow_copy_assignable.hpp>
# include <elib/aux/traits/is_nothrow_move_assignable.hpp>
# include <elib/aux/traits/is_destructible.hpp>
# include <elib/aux/traits/is_trivially_destructible.hpp>
# include <elib/aux/traits/is_nothrow_destructible.hpp>
# include <elib/aux/traits/has_virtual_destructor.hpp>
# include <elib/aux/traits/is_trivially_copyable.hpp>
# include <elib/aux/traits/is_trivially_constructible.hpp>
# include <elib/aux/traits/is_trivially_default_constructible.hpp>
# include <elib/aux/traits/is_trivially_copy_constructible.hpp>
# include <elib/aux/traits/is_trivially_move_constructible.hpp>
# include <elib/aux/traits/is_trivially_assignable.hpp>
# include <elib/aux/traits/is_trivially_copy_assignable.hpp>
# include <elib/aux/traits/is_trivially_move_assignable.hpp>
# include <elib/aux/traits/alignment_of.hpp>
# include <elib/aux/traits/rank.hpp>
# include <elib/aux/traits/extent.hpp>
# include <elib/aux/traits/is_same.hpp>
# include <elib/aux/traits/is_base_of.hpp>
# include <elib/aux/traits/is_convertible.hpp>
# 
# include <elib/aux/traits/is_explicitly_convertible.hpp>
# include <elib/aux/traits/is_explicitly_castable.hpp>
# include <elib/aux/traits/is_implicitly_castable.hpp>
# include <elib/aux/traits/is_castable.hpp>
# include <elib/aux/traits/is_swappable.hpp>
# include <elib/aux/traits/is_input_streamable.hpp>
# include <elib/aux/traits/is_output_streamable.hpp>
# include <elib/aux/traits/is_string_type.hpp>
# include <elib/aux/traits/uncvref.hpp>
# include <elib/aux/traits/strip_ref_wrapper.hpp>
# 
# include <elib/aux/traits/conditional.hpp>
# 
#endif /* ELIB_AUX_TRAITS_HPP */